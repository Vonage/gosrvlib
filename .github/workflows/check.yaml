name: check

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

env:
  GO_VERSION: 1.16.x
  GOLANGCI_LINT_VERSION: v1.39

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: setup go build environment
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: run golanci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: ./pkg

  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: setup go build environment
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: dependency cache
        uses: actions/cache@v2
        with:
          path: $(go env GOPATH)/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: run unit tests
        run: |
          GOPATH=$(go env GOPATH) make mod deps test

  example-lint-cmd:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: setup go build environment
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: run golanci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: ./examples/service/cmd

  example-lint-internal:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: configure environment
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .github/workflows/.env
      - name: setup go build environment
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: run golanci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: ./examples/service/internal

  example-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: setup go build environment
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: dependency cache
        uses: actions/cache@v2
        with:
          path: $(go env GOPATH)/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: run unit tests
        run: |
          GOPATH=$(go env GOPATH) make mod deps generate confcheck test

  example-integration-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: setup go build environment
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: dependency cache
        uses: actions/cache@v2
        with:
          path: $(go env GOPATH)/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: run unit tests
        run: |
          echo ${GITHUB_RUN_NUMBER} > RELEASE
          GOPATH=$(go env GOPATH) make mod deps generate build docker dockertest
