#!/bin/bash
#
#chkconfig: 235 99 01
#description: Starts and stops gosrvlibexample service
#author: Nicola Asuni

### BEGIN INIT INFO
# Provides:          gosrvlibexample
# Required-Start:    $remote_fs
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start gosrvlibexample
# Description:       gosrvlibexampleshortdesc
### END INIT INFO

CMD="/usr/bin/gosrvlibexample"
LOGFILE="/var/log/gosrvlibexample.log"
LOCKFILE="/var/lock/gosrvlibexample"
PID=`ps ax | grep -v grep | grep "$CMD" | awk '{print $1;}'`
RETVAL=0

# get SystemV Init function library.
if [ -f /etc/init.d/functions ] ; then
	. /etc/init.d/functions
elif [ -f /etc/rc.d/init.d/functions ] ; then
	. /etc/rc.d/init.d/functions
elif [ -f /lib/lsb/init-functions ] ; then
	. /lib/lsb/init-functions
else
	exit 1
fi

# Start the service
start() {
	echo -n "Starting gosrvlibexample: "
	if test -f $LOCKFILE ; then
		# check if the process is running
		if [ ! -z "$PID" ]; then
			echo "Service is Already Running."
			return $RETVAL
		else
			# delete the orphan lock file
			rm -f $LOCKFILE
		fi
	fi
	#start the process
	(setsid bash -c "($CMD) & disown %%") > $LOGFILE 2>&1 &
	RETVAL=$?
	[ $RETVAL = 0 ] && touch $LOCKFILE && echo "OK" || echo "ERROR"
	return $RETVAL
}

# Restart the service
stop() {
	echo -n "Stopping gosrvlibexample: "
	# check if the process is running
	if [ ! -z "$PID" ]; then
		# kill the process
		kill $PID
		RETVAL=$?
		echo "OK"
	else
		RETVAL=3
		echo "Service is not running."
	fi
	rm -f $LOCKFILE
	return $RETVAL
}

### main logic ###
case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	status)
		echo -n "gosrvlibexample status: "
		if [ ! -z "$PID" ]; then
			RETVAL=0
			echo "Service is running."
		else
			if test -f $LOCKFILE ; then
				RETVAL=2
				echo "Service is dead and $LOCKFILE lock file exist."
			else
				RETVAL=3
				echo "Service is not running."
			fi
		fi
		;;
	restart|reload)
		stop
		start
		;;
	condrestart)
		if test -f $LOCKFILE ; then
			stop
			start
		fi
		;;
	force-reload)
		stop
		start
		;;
	*)
		echo "Usage: $0 {start|stop|status|restart|reload|condrestart}"
		RETVAL=2
		[ "$1" = 'usage' ] && RETVAL=0
esac
exit $RETVAL
