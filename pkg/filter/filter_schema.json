{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "type": "array",
  "minItems": 1,
  "title": "Filter",
  "description": "This is a double array representing filters combined with AND and OR operators. The first level is combined with an AND operator and the second one with an OR. For example: The JSON [[{\"field\":\"name\",\"type\":\"equal\",\"value\":\"doe\"},{\"field\":\"age\",\"type\":\"equal\",\"value\":42}],[{\"field\":\"address.country\",\"type\":\"regexp\",\"value\":\"^EN$|^FR$\"}]] is equivalent to the boolean logic ((name=doe OR age=42) AND (address.country match \"EN\" or \"FR\")).",
  "items": {
    "type": "array",
    "minItems": 1,
    "items": {
      "type": "object",
      "title": "Rule",
      "description": "Represents a single rule that can be combined into a filter.",
      "required": [
        "field",
        "type",
        "value"
      ],
      "properties": {
        "field": {
          "type": "string",
          "title": "Field selector",
          "description": "The path used to to get the field of an input item to evaluate against. It can target a nested field, in which case it's dot-separated.",
          "examples": [
            "name",
            "address.country"
          ]
        },
        "type": {
          "type": "string",
          "title": "The type of the rule",
          "enum": [
            "equal",
            "=",
            "==",
            "notequal",
            "!=",
            "<>",
            "regexp",
            "lt",
            "<",
            "lte",
            "<=",
            "gt",
            ">",
            "gte",
            ">="
          ]
        },
        "value": {
          "type": [
            "string",
            "integer",
            "boolean",
            "null"
          ],
          "title": "The value to evaluate against",
          "examples": [
            "john",
            42,
            "^EN$|^FR$"
          ]
        }
      }
    }
  },
  "examples": [
    [
      [
        {
          "field": "name",
          "type": "equal",
          "value": "doe"
        },
        {
          "field": "age",
          "type": "equal",
          "value": 42
        }
      ],
      [
        {
          "field": "address.country",
          "type": "regexp",
          "value": "^EN$|^FR$"
        }
      ]
    ]
  ]
}
