// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vonage/gosrvlib/pkg/httpserver (interfaces: Binder)

// Package httpserver is a generated GoMock package.
package httpserver

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBinder is a mock of Binder interface.
type MockBinder struct {
	ctrl     *gomock.Controller
	recorder *MockBinderMockRecorder
}

// MockBinderMockRecorder is the mock recorder for MockBinder.
type MockBinderMockRecorder struct {
	mock *MockBinder
}

// NewMockBinder creates a new mock instance.
func NewMockBinder(ctrl *gomock.Controller) *MockBinder {
	mock := &MockBinder{ctrl: ctrl}
	mock.recorder = &MockBinderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBinder) EXPECT() *MockBinderMockRecorder {
	return m.recorder
}

// BindHTTP mocks base method.
func (m *MockBinder) BindHTTP(arg0 context.Context) []Route {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BindHTTP", arg0)
	ret0, _ := ret[0].([]Route)
	return ret0
}

// BindHTTP indicates an expected call of BindHTTP.
func (mr *MockBinderMockRecorder) BindHTTP(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BindHTTP", reflect.TypeOf((*MockBinder)(nil).BindHTTP), arg0)
}
