# https://golangci-lint.run/usage/configuration/

run:
  issues-exit-code: 1
  tests: true
  timeout: 1m
  skip-dirs:
    - .github
    - .githook
  skip-dirs-use-default: true

#  # by default isn't set. If set we pass it to "go list -mod={option}". From "go help modules":
#  # If invoked with -mod=readonly, the go command is disallowed from the implicit
#  # automatic updating of go.mod described above. Instead, it fails when any changes
#  # to go.mod are needed. This setting is most useful to check that go.mod does
#  # not need updates, such as in a continuous integration and testing system.
#  # If invoked with -mod=vendor, the go command assumes that the vendor
#  # directory holds the correct copies of dependencies and ignores
#  # the dependency descriptions in go.mod.
#  modules-download-mode: readonly|release|vendor
#  modules-download-mode: vendor

output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate, default is "colored-line-number"
  format: colored-line-number

## all available settings of specific linters
#linters-settings:
#  lll:
#    # max line length, lines longer will be reported. Default is 120.
#    # '\t' is counted as 1 character by default, and can be changed with the tab-width option
#    line-length: 120
#    # tab width in spaces. Default to 1.
#    tab-width: 1
#  nakedret:
#    # make an issue if func has more lines of code than this setting and it has naked returns; default is 30
#    max-func-lines: 30
#  prealloc:
#    # XXX: we don't recommend using this linter before doing performance profiling.
#    # For most programs usage of prealloc will be a premature optimization.
#
#    # Report preallocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.
#    # True by default.
#    simple: true
#    range-loops: true # Report preallocation suggestions on range loops, true by default
#    for-loops: false # Report preallocation suggestions on for loops, false by default
#  nolintlint:
#    # Enable to ensure that nolint directives are all used. Default is true.
#    allow-unused: false
#    # Disable to ensure that nolint directives don't have a leading space. Default is true.
#    allow-leading-space: true
#    # Exclude following linters from requiring an explanation.  Default is [].
#    allow-no-explanation: []
#    # Enable to require an explanation of nonzero length after each nolint directive. Default is false.
#    require-explanation: true
#    # Enable to require nolint directives to mention the specific linter being suppressed. Default is false.
#    require-specific: true

linters-settings:
  gocognit:
    min-complexity: 10
  gocyclo:
    min-complexity: 10
  gofmt:
    simplify: true
  maligned:
    suggest-new: true
  misspell:
    locale: US
#    ignore-words:
#      - someword
  whitespace:
    multi-if: false   # Enforces newlines (or comments) after every multi-line if statement
    multi-func: false # Enforces newlines (or comments) after every multi-line function signature
#  wsl:
#    # If true append is only allowed to be cuddled if appending value is
#    # matching variables, fields or types on line above. Default is true.
#    strict-append: true
#    # Allow calls and assignments to be cuddled as long as the lines have any
#    # matching variables, fields or types. Default is true.
#    allow-assign-and-call: true
#    # Allow multiline assignments to be cuddled. Default is true.
#    allow-multiline-assign: true
#    # Allow declarations (var) to be cuddled.
#    allow-cuddle-declarations: false
#    # Allow trailing comments in ending of blocks
#    allow-trailing-comment: false
#    # Force newlines in end of case at this limit (0 = never).
#    force-case-trailing-whitespace: 0
#    # Force cuddling of err checks with err var assignment
#    force-err-cuddling: false
#    # Allow leading comments to be separated with empty liens
#    allow-separated-leading-comment: false

linters:
  disable-all: true
  enable:
    - asciicheck
    - deadcode
    - dogsled
    - errcheck
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godox
#    - goerr113
    - gofmt
    - golint
#    - gomnd
    - gosec
    - gosimple
    - govet
    - ineffassign
    - maligned
    - megacheck
    - misspell
    - nestif
    - rowserrcheck
    - structcheck
    - staticcheck
    - typecheck
    - varcheck
    - unconvert
    - unparam
    - unused
    - whitespace
# https://github.com/bombsimon/wsl
#    - wsl

# TODO: exclude testutil from being analysed
